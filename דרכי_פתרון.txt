

דרך פתרון א : 

* רשימה מקושרת 
  להוסיף לרשימה מקושרת את האופציה -> ל list של next (ריבוי של next)
  במקרה של לופ -> להוסיף item שנקרא LOOP (יהיה צורך כנראה במחיקה בלבלד , לא מומש בקוד)
  להוסיף משתנה root שבעצם אומר מי הראשי
  
  + final כאלה  שאין להם next ושהם לא נקראים LOOP
  +  orphan כאלה שה root שלהם שונה מ initStatus
  
  ביצוע : (אולי לא יעיל)
  לרוץ על statuses וליצר רשימה של אייברי רשימה מקושרת
  אחרי זה לרוץ על transactions :
  למצוא את ה tran הראשון ברשימה של LinkStatuses ולצרף ל next שלו את הערך tran.to (במידה וכבר לא קיים)
  * יש לבדוק שהערך next שלו הוא לא הערך prev . במידה והערך prev ה next יקרא LOOP
   להעתיק את tran.head ל linkstatus.head הנוכחי
  
  
  
דרך פתרון ב : (לא פתור עד הסוף , יש לוגיקיה חסרה)
  * רשימה של עצים
    העץ הראשון נוצר בהתחלה עם הנוד הראשוני initStatus
	יש צורך לעבור על הרשימה ולהתחיל להוסיף לפי הסדר (חייב שיהיה sort כלשהו)
	- אין אפשרות ליצר כמה פעמים את אותו ה status ולכן זה יכול ליצור בעיה בתשובה
	במקרה של לופ -> להוסיף item שנקרא LOOP	
  
   + final כאלה  שאין להם child
  +  orphan העצים שלא נמצאים במקום רשימה 0